package com.capg;

public abstract class Trainee implements Comparable<Trainee> {

	String tName;
	int Height;
	int age;
	public Trainee(String tName, int Height, int age) {
		super();
		this.tName = tName;
		this.Height = Height;
		this.age = age;
	}
	
	
	@Override
	public String toString() {
		return "Trainee [tName=" + tName + ", Height=" + Height + ", age=" + age + "]";
	}
	public int compareTo1(Trainee t) {
		return this.tName.compareTo(t.tName);
	}
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + Height;
		result = prime * result + age;
		result = prime * result + ((tName == null) ? 0 : tName.hashCode());
		return result;
	}
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Trainee other = (Trainee) obj;
		if (Height != other.Height)
			return false;
		if (age != other.age)
			return false;
		if (tName == null) {
			if (other.tName != null)
				return false;
		} else if (!tName.equals(other.tName))
			return false;
		return true;
	}
	
	
	
}